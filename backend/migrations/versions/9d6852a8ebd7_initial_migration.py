"""initial migration

Revision ID: 9d6852a8ebd7
Revises: 
Create Date: 2025-01-05 12:52:28.955576

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9d6852a8ebd7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spatial_ref_sys')
    op.drop_table('notifications')
    op.drop_table('user_settings')
    op.drop_table('conversations')
    op.drop_table('scores')
    op.drop_index('idx_locations_location', table_name='locations', postgresql_using='gist')
    op.drop_table('locations')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('average_rate', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('password', name='users_password_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('locations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.NullType(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], name='locations_username_fkey'),
    sa.PrimaryKeyConstraint('id', name='locations_pkey')
    )
    op.create_index('idx_locations_location', 'locations', ['location'], unique=False, postgresql_using='gist')
    op.create_table('scores',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rated_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rated_to', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['rated_by'], ['users.username'], name='scores_rated_by_fkey'),
    sa.ForeignKeyConstraint(['rated_to'], ['users.username'], name='scores_rated_to_fkey'),
    sa.PrimaryKeyConstraint('id', name='scores_pkey')
    )
    op.create_table('conversations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('conv_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('initiator_username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('recipient_username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_anonymous', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('initiator_opened', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('recipient_opened', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['initiator_username'], ['users.username'], name='conversations_initiator_username_fkey'),
    sa.ForeignKeyConstraint(['recipient_username'], ['users.username'], name='conversations_recipient_username_fkey'),
    sa.PrimaryKeyConstraint('id', name='conversations_pkey'),
    sa.UniqueConstraint('conv_id', name='conversations_conv_id_key')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('allow_anonymous', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('auto_delete_days', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['username'], ['users.username'], name='user_settings_username_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_settings_pkey'),
    sa.UniqueConstraint('username', name='user_settings_username_key')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('notification_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], name='notifications_username_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey'),
    sa.UniqueConstraint('notification_id', name='notifications_notification_id_key'),
    sa.UniqueConstraint('username', name='notifications_username_key')
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
